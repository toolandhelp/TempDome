// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tool.Calendar.Repository.MysqlEFCore;

namespace Tool.Calendar.Repository.Migrations
{
    [DbContext(typeof(MySqlDbContext))]
    partial class MySqlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("Tool.Calendar.Models.Models.T_ConsumptionType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConsumptionTypeClass");

                    b.Property<DateTime>("ConsumptionTypeCreateDate");

                    b.Property<byte[]>("ConsumptionTypeGuid")
                        .IsRequired()
                        .HasConversion(new ValueConverter<byte[], byte[]>(v => default(byte[]), v => default(byte[]), new ConverterMappingHints(size: 16)));

                    b.Property<string>("ConsumptionTypeName");

                    b.HasKey("ID");

                    b.ToTable("t_ConsumptionTypes");
                });

            modelBuilder.Entity("Tool.Calendar.Models.Models.T_WebUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDateTime");

                    b.Property<string>("EncryptCode");

                    b.Property<byte[]>("UserGuid")
                        .IsRequired()
                        .HasConversion(new ValueConverter<byte[], byte[]>(v => default(byte[]), v => default(byte[]), new ConverterMappingHints(size: 16)));

                    b.Property<string>("UserMail");

                    b.Property<string>("UserPwd");

                    b.HasKey("UserId");

                    b.ToTable("t_WebUser");
                });
#pragma warning restore 612, 618
        }
    }
}
