using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.Extensions.Configuration;

namespace Tool.Calendar.Model
{
    public partial class GSQBaseContext : DbContext
    {
        public GSQBaseContext()
        {

        }

        public GSQBaseContext(IConfiguration configuration)
        {
            Configuration = configuration;
        }

        public GSQBaseContext(DbContextOptions<GSQBaseContext> options)
            : base(options)
        {
        }

        public IConfiguration Configuration { get; }

        public virtual DbSet<SysArea> SysArea { get; set; }
        public virtual DbSet<SysDbBackup> SysDbBackup { get; set; }
        public virtual DbSet<SysFilterIp> SysFilterIp { get; set; }
        public virtual DbSet<SysItems> SysItems { get; set; }
        public virtual DbSet<SysItemsDetail> SysItemsDetail { get; set; }
        public virtual DbSet<SysLog> SysLog { get; set; }
        public virtual DbSet<SysModule> SysModule { get; set; }
        public virtual DbSet<SysModuleButton> SysModuleButton { get; set; }
        public virtual DbSet<SysModuleForm> SysModuleForm { get; set; }
        public virtual DbSet<SysModuleFormInstance> SysModuleFormInstance { get; set; }
        public virtual DbSet<SysOrganize> SysOrganize { get; set; }
        public virtual DbSet<SysRole> SysRole { get; set; }
        public virtual DbSet<SysRoleAuthorize> SysRoleAuthorize { get; set; }
        public virtual DbSet<SysUser> SysUser { get; set; }
        public virtual DbSet<SysUserLogOn> SysUserLogOn { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseMySql(Configuration.GetConnectionString("MySqlConnection"));
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<SysArea>(entity =>
            {
                entity.HasKey(e => e.FId)
                    .HasName("PRIMARY");

                entity.ToTable("Sys_Area");

                entity.Property(e => e.FId)
                    .HasColumnName("F_Id")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FCreatorTime)
                    .HasColumnName("F_CreatorTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FCreatorUserId)
                    .HasColumnName("F_CreatorUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FDeleteMark)
                    .HasColumnName("F_DeleteMark")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FDeleteTime)
                    .HasColumnName("F_DeleteTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FDeleteUserId)
                    .HasColumnName("F_DeleteUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FDescription)
                    .HasColumnName("F_Description")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FEnCode)
                    .HasColumnName("F_EnCode")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FEnabledMark)
                    .HasColumnName("F_EnabledMark")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FFullName)
                    .HasColumnName("F_FullName")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FLastModifyTime)
                    .HasColumnName("F_LastModifyTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FLastModifyUserId)
                    .HasColumnName("F_LastModifyUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FLayers)
                    .HasColumnName("F_Layers")
                    .HasColumnType("int(11)");

                entity.Property(e => e.FParentId)
                    .HasColumnName("F_ParentId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FSimpleSpelling)
                    .HasColumnName("F_SimpleSpelling")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FSortCode)
                    .HasColumnName("F_SortCode")
                    .HasColumnType("int(11)");
            });

            modelBuilder.Entity<SysDbBackup>(entity =>
            {
                entity.HasKey(e => e.FId)
                    .HasName("PRIMARY");

                entity.ToTable("Sys_DbBackup");

                entity.Property(e => e.FId)
                    .HasColumnName("F_Id")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FBackupTime)
                    .HasColumnName("F_BackupTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FBackupType)
                    .HasColumnName("F_BackupType")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FCreatorTime)
                    .HasColumnName("F_CreatorTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FCreatorUserId)
                    .HasColumnName("F_CreatorUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FDbName)
                    .HasColumnName("F_DbName")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FDeleteMark)
                    .HasColumnName("F_DeleteMark")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FDeleteTime)
                    .HasColumnName("F_DeleteTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FDeleteUserId)
                    .HasColumnName("F_DeleteUserId")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FDescription)
                    .HasColumnName("F_Description")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FEnabledMark)
                    .HasColumnName("F_EnabledMark")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FFileName)
                    .HasColumnName("F_FileName")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FFilePath)
                    .HasColumnName("F_FilePath")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FFileSize)
                    .HasColumnName("F_FileSize")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FLastModifyTime)
                    .HasColumnName("F_LastModifyTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FLastModifyUserId)
                    .HasColumnName("F_LastModifyUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FSortCode)
                    .HasColumnName("F_SortCode")
                    .HasColumnType("int(11)");
            });

            modelBuilder.Entity<SysFilterIp>(entity =>
            {
                entity.HasKey(e => e.FId)
                    .HasName("PRIMARY");

                entity.ToTable("Sys_FilterIP");

                entity.Property(e => e.FId)
                    .HasColumnName("F_Id")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FCreatorTime)
                    .HasColumnName("F_CreatorTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FCreatorUserId)
                    .HasColumnName("F_CreatorUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FDeleteMark)
                    .HasColumnName("F_DeleteMark")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FDeleteTime)
                    .HasColumnName("F_DeleteTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FDeleteUserId)
                    .HasColumnName("F_DeleteUserId")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FDescription)
                    .HasColumnName("F_Description")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FEnabledMark)
                    .HasColumnName("F_EnabledMark")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FEndIp)
                    .HasColumnName("F_EndIP")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FLastModifyTime)
                    .HasColumnName("F_LastModifyTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FLastModifyUserId)
                    .HasColumnName("F_LastModifyUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FSortCode)
                    .HasColumnName("F_SortCode")
                    .HasColumnType("int(11)");

                entity.Property(e => e.FStartIp)
                    .HasColumnName("F_StartIP")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FType)
                    .HasColumnName("F_Type")
                    .HasColumnType("tinyint(1)");
            });

            modelBuilder.Entity<SysItems>(entity =>
            {
                entity.HasKey(e => e.FId)
                    .HasName("PRIMARY");

                entity.ToTable("Sys_Items");

                entity.Property(e => e.FId)
                    .HasColumnName("F_Id")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FCreatorTime)
                    .HasColumnName("F_CreatorTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FCreatorUserId)
                    .HasColumnName("F_CreatorUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FDeleteMark)
                    .HasColumnName("F_DeleteMark")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FDeleteTime)
                    .HasColumnName("F_DeleteTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FDeleteUserId)
                    .HasColumnName("F_DeleteUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FDescription)
                    .HasColumnName("F_Description")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FEnCode)
                    .HasColumnName("F_EnCode")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FEnabledMark)
                    .HasColumnName("F_EnabledMark")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FFullName)
                    .HasColumnName("F_FullName")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FIsTree)
                    .HasColumnName("F_IsTree")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FLastModifyTime)
                    .HasColumnName("F_LastModifyTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FLastModifyUserId)
                    .HasColumnName("F_LastModifyUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FLayers)
                    .HasColumnName("F_Layers")
                    .HasColumnType("int(11)");

                entity.Property(e => e.FParentId)
                    .HasColumnName("F_ParentId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FSortCode)
                    .HasColumnName("F_SortCode")
                    .HasColumnType("int(11)");
            });

            modelBuilder.Entity<SysItemsDetail>(entity =>
            {
                entity.HasKey(e => e.FId)
                    .HasName("PRIMARY");

                entity.ToTable("Sys_ItemsDetail");

                entity.Property(e => e.FId)
                    .HasColumnName("F_Id")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FCreatorTime)
                    .HasColumnName("F_CreatorTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FCreatorUserId)
                    .HasColumnName("F_CreatorUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FDeleteMark)
                    .HasColumnName("F_DeleteMark")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FDeleteTime)
                    .HasColumnName("F_DeleteTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FDeleteUserId)
                    .HasColumnName("F_DeleteUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FDescription)
                    .HasColumnName("F_Description")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FEnabledMark)
                    .HasColumnName("F_EnabledMark")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FIsDefault)
                    .HasColumnName("F_IsDefault")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FItemCode)
                    .HasColumnName("F_ItemCode")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FItemId)
                    .HasColumnName("F_ItemId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FItemName)
                    .HasColumnName("F_ItemName")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FLastModifyTime)
                    .HasColumnName("F_LastModifyTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FLastModifyUserId)
                    .HasColumnName("F_LastModifyUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FLayers)
                    .HasColumnName("F_Layers")
                    .HasColumnType("int(11)");

                entity.Property(e => e.FParentId)
                    .HasColumnName("F_ParentId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FSimpleSpelling)
                    .HasColumnName("F_SimpleSpelling")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FSortCode)
                    .HasColumnName("F_SortCode")
                    .HasColumnType("int(11)");
            });

            modelBuilder.Entity<SysLog>(entity =>
            {
                entity.HasKey(e => e.FId)
                    .HasName("PRIMARY");

                entity.ToTable("Sys_Log");

                entity.Property(e => e.FId)
                    .HasColumnName("F_Id")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FAccount)
                    .HasColumnName("F_Account")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FCreatorTime)
                    .HasColumnName("F_CreatorTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FCreatorUserId)
                    .HasColumnName("F_CreatorUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FDate)
                    .HasColumnName("F_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.FDescription)
                    .HasColumnName("F_Description")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FIpaddress)
                    .HasColumnName("F_IPAddress")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FIpaddressName)
                    .HasColumnName("F_IPAddressName")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FModuleId)
                    .HasColumnName("F_ModuleId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FModuleName)
                    .HasColumnName("F_ModuleName")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FNickName)
                    .HasColumnName("F_NickName")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FResult)
                    .HasColumnName("F_Result")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FType)
                    .HasColumnName("F_Type")
                    .HasColumnType("varchar(50)");
            });

            modelBuilder.Entity<SysModule>(entity =>
            {
                entity.HasKey(e => e.FId)
                    .HasName("PRIMARY");

                entity.ToTable("Sys_Module");

                entity.Property(e => e.FId)
                    .HasColumnName("F_Id")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FAllowDelete)
                    .HasColumnName("F_AllowDelete")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FAllowEdit)
                    .HasColumnName("F_AllowEdit")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FCreatorTime)
                    .HasColumnName("F_CreatorTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FCreatorUserId)
                    .HasColumnName("F_CreatorUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FDeleteMark)
                    .HasColumnName("F_DeleteMark")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FDeleteTime)
                    .HasColumnName("F_DeleteTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FDeleteUserId)
                    .HasColumnName("F_DeleteUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FDescription)
                    .HasColumnName("F_Description")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FEnCode)
                    .HasColumnName("F_EnCode")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FEnabledMark)
                    .HasColumnName("F_EnabledMark")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FFullName)
                    .HasColumnName("F_FullName")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FIcon)
                    .HasColumnName("F_Icon")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FIsExpand)
                    .HasColumnName("F_IsExpand")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FIsMenu)
                    .HasColumnName("F_IsMenu")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FIsPublic)
                    .HasColumnName("F_IsPublic")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FLastModifyTime)
                    .HasColumnName("F_LastModifyTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FLastModifyUserId)
                    .HasColumnName("F_LastModifyUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FLayers)
                    .HasColumnName("F_Layers")
                    .HasColumnType("int(11)");

                entity.Property(e => e.FParentId)
                    .HasColumnName("F_ParentId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FSortCode)
                    .HasColumnName("F_SortCode")
                    .HasColumnType("int(11)");

                entity.Property(e => e.FTarget)
                    .HasColumnName("F_Target")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FUrlAddress)
                    .HasColumnName("F_UrlAddress")
                    .HasColumnType("varchar(500)");
            });

            modelBuilder.Entity<SysModuleButton>(entity =>
            {
                entity.HasKey(e => e.FId)
                    .HasName("PRIMARY");

                entity.ToTable("Sys_ModuleButton");

                entity.Property(e => e.FId)
                    .HasColumnName("F_Id")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FAllowDelete)
                    .HasColumnName("F_AllowDelete")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FAllowEdit)
                    .HasColumnName("F_AllowEdit")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FCreatorTime)
                    .HasColumnName("F_CreatorTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FCreatorUserId)
                    .HasColumnName("F_CreatorUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FDeleteMark)
                    .HasColumnName("F_DeleteMark")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FDeleteTime)
                    .HasColumnName("F_DeleteTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FDeleteUserId)
                    .HasColumnName("F_DeleteUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FDescription)
                    .HasColumnName("F_Description")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FEnCode)
                    .HasColumnName("F_EnCode")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FEnabledMark)
                    .HasColumnName("F_EnabledMark")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FFullName)
                    .HasColumnName("F_FullName")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FIcon)
                    .HasColumnName("F_Icon")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FIsPublic)
                    .HasColumnName("F_IsPublic")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FJsEvent)
                    .HasColumnName("F_JsEvent")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FLastModifyTime)
                    .HasColumnName("F_LastModifyTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FLastModifyUserId)
                    .HasColumnName("F_LastModifyUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FLayers)
                    .HasColumnName("F_Layers")
                    .HasColumnType("int(11)");

                entity.Property(e => e.FLocation)
                    .HasColumnName("F_Location")
                    .HasColumnType("int(11)");

                entity.Property(e => e.FModuleId)
                    .HasColumnName("F_ModuleId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FParentId)
                    .HasColumnName("F_ParentId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FSortCode)
                    .HasColumnName("F_SortCode")
                    .HasColumnType("int(11)");

                entity.Property(e => e.FSplit)
                    .HasColumnName("F_Split")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FUrlAddress)
                    .HasColumnName("F_UrlAddress")
                    .HasColumnType("varchar(500)");
            });

            modelBuilder.Entity<SysModuleForm>(entity =>
            {
                entity.HasKey(e => e.FId)
                    .HasName("PRIMARY");

                entity.ToTable("Sys_ModuleForm");

                entity.Property(e => e.FId)
                    .HasColumnName("F_Id")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FCreatorTime)
                    .HasColumnName("F_CreatorTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FCreatorUserId)
                    .HasColumnName("F_CreatorUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FDeleteMark)
                    .HasColumnName("F_DeleteMark")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FDeleteTime)
                    .HasColumnName("F_DeleteTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FDeleteUserId)
                    .HasColumnName("F_DeleteUserId")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FDescription)
                    .HasColumnName("F_Description")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FEnCode)
                    .HasColumnName("F_EnCode")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FEnabledMark)
                    .HasColumnName("F_EnabledMark")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FFormJson)
                    .HasColumnName("F_FormJson")
                    .HasColumnType("longtext");

                entity.Property(e => e.FFullName)
                    .HasColumnName("F_FullName")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FLastModifyTime)
                    .HasColumnName("F_LastModifyTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FLastModifyUserId)
                    .HasColumnName("F_LastModifyUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FModuleId)
                    .HasColumnName("F_ModuleId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FSortCode)
                    .HasColumnName("F_SortCode")
                    .HasColumnType("int(11)");
            });

            modelBuilder.Entity<SysModuleFormInstance>(entity =>
            {
                entity.HasKey(e => e.FId)
                    .HasName("PRIMARY");

                entity.ToTable("Sys_ModuleFormInstance");

                entity.Property(e => e.FId)
                    .HasColumnName("F_Id")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FCreatorTime)
                    .HasColumnName("F_CreatorTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FCreatorUserId)
                    .HasColumnName("F_CreatorUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FFormId)
                    .HasColumnName("F_FormId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FInstanceJson)
                    .HasColumnName("F_InstanceJson")
                    .HasColumnType("longtext");

                entity.Property(e => e.FObjectId)
                    .HasColumnName("F_ObjectId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FSortCode)
                    .HasColumnName("F_SortCode")
                    .HasColumnType("int(11)");
            });

            modelBuilder.Entity<SysOrganize>(entity =>
            {
                entity.HasKey(e => e.FId)
                    .HasName("PRIMARY");

                entity.ToTable("Sys_Organize");

                entity.Property(e => e.FId)
                    .HasColumnName("F_Id")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FAddress)
                    .HasColumnName("F_Address")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FAllowDelete)
                    .HasColumnName("F_AllowDelete")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FAllowEdit)
                    .HasColumnName("F_AllowEdit")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FAreaId)
                    .HasColumnName("F_AreaId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FCategoryId)
                    .HasColumnName("F_CategoryId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FCreatorTime)
                    .HasColumnName("F_CreatorTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FCreatorUserId)
                    .HasColumnName("F_CreatorUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FDeleteMark)
                    .HasColumnName("F_DeleteMark")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FDeleteTime)
                    .HasColumnName("F_DeleteTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FDeleteUserId)
                    .HasColumnName("F_DeleteUserId")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FDescription)
                    .HasColumnName("F_Description")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FEmail)
                    .HasColumnName("F_Email")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FEnCode)
                    .HasColumnName("F_EnCode")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FEnabledMark)
                    .HasColumnName("F_EnabledMark")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FFax)
                    .HasColumnName("F_Fax")
                    .HasColumnType("varchar(20)");

                entity.Property(e => e.FFullName)
                    .HasColumnName("F_FullName")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FLastModifyTime)
                    .HasColumnName("F_LastModifyTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FLastModifyUserId)
                    .HasColumnName("F_LastModifyUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FLayers)
                    .HasColumnName("F_Layers")
                    .HasColumnType("int(11)");

                entity.Property(e => e.FManagerId)
                    .HasColumnName("F_ManagerId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FMobilePhone)
                    .HasColumnName("F_MobilePhone")
                    .HasColumnType("varchar(20)");

                entity.Property(e => e.FParentId)
                    .HasColumnName("F_ParentId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FShortName)
                    .HasColumnName("F_ShortName")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FSortCode)
                    .HasColumnName("F_SortCode")
                    .HasColumnType("int(11)");

                entity.Property(e => e.FTelePhone)
                    .HasColumnName("F_TelePhone")
                    .HasColumnType("varchar(20)");

                entity.Property(e => e.FWeChat)
                    .HasColumnName("F_WeChat")
                    .HasColumnType("varchar(50)");
            });

            modelBuilder.Entity<SysRole>(entity =>
            {
                entity.HasKey(e => e.FId)
                    .HasName("PRIMARY");

                entity.ToTable("Sys_Role");

                entity.Property(e => e.FId)
                    .HasColumnName("F_Id")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FAllowDelete)
                    .HasColumnName("F_AllowDelete")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FAllowEdit)
                    .HasColumnName("F_AllowEdit")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FCategory)
                    .HasColumnName("F_Category")
                    .HasColumnType("int(11)");

                entity.Property(e => e.FCreatorTime)
                    .HasColumnName("F_CreatorTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FCreatorUserId)
                    .HasColumnName("F_CreatorUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FDeleteMark)
                    .HasColumnName("F_DeleteMark")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FDeleteTime)
                    .HasColumnName("F_DeleteTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FDeleteUserId)
                    .HasColumnName("F_DeleteUserId")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FDescription)
                    .HasColumnName("F_Description")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FEnCode)
                    .HasColumnName("F_EnCode")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FEnabledMark)
                    .HasColumnName("F_EnabledMark")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FFullName)
                    .HasColumnName("F_FullName")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FLastModifyTime)
                    .HasColumnName("F_LastModifyTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FLastModifyUserId)
                    .HasColumnName("F_LastModifyUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FOrganizeId)
                    .HasColumnName("F_OrganizeId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FSortCode)
                    .HasColumnName("F_SortCode")
                    .HasColumnType("int(11)");

                entity.Property(e => e.FType)
                    .HasColumnName("F_Type")
                    .HasColumnType("varchar(50)");
            });

            modelBuilder.Entity<SysRoleAuthorize>(entity =>
            {
                entity.HasKey(e => e.FId)
                    .HasName("PRIMARY");

                entity.ToTable("Sys_RoleAuthorize");

                entity.Property(e => e.FId)
                    .HasColumnName("F_Id")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FCreatorTime)
                    .HasColumnName("F_CreatorTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FCreatorUserId)
                    .HasColumnName("F_CreatorUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FItemId)
                    .HasColumnName("F_ItemId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FItemType)
                    .HasColumnName("F_ItemType")
                    .HasColumnType("int(11)");

                entity.Property(e => e.FObjectId)
                    .HasColumnName("F_ObjectId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FObjectType)
                    .HasColumnName("F_ObjectType")
                    .HasColumnType("int(11)");

                entity.Property(e => e.FSortCode)
                    .HasColumnName("F_SortCode")
                    .HasColumnType("int(11)");
            });

            modelBuilder.Entity<SysUser>(entity =>
            {
                entity.HasKey(e => e.FId)
                    .HasName("PRIMARY");

                entity.ToTable("Sys_User");

                entity.Property(e => e.FId)
                    .HasColumnName("F_Id")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FAccount)
                    .HasColumnName("F_Account")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FBirthday)
                    .HasColumnName("F_Birthday")
                    .HasColumnType("datetime");

                entity.Property(e => e.FCreatorTime)
                    .HasColumnName("F_CreatorTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FCreatorUserId)
                    .HasColumnName("F_CreatorUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FDeleteMark)
                    .HasColumnName("F_DeleteMark")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FDeleteTime)
                    .HasColumnName("F_DeleteTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FDeleteUserId)
                    .HasColumnName("F_DeleteUserId")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FDepartmentId)
                    .HasColumnName("F_DepartmentId")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FDescription)
                    .HasColumnName("F_Description")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FDutyId)
                    .HasColumnName("F_DutyId")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FEmail)
                    .HasColumnName("F_Email")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FEnabledMark)
                    .HasColumnName("F_EnabledMark")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FGender)
                    .HasColumnName("F_Gender")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FHeadIcon)
                    .HasColumnName("F_HeadIcon")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FIsAdministrator)
                    .HasColumnName("F_IsAdministrator")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FLastModifyTime)
                    .HasColumnName("F_LastModifyTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FLastModifyUserId)
                    .HasColumnName("F_LastModifyUserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FManagerId)
                    .HasColumnName("F_ManagerId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FMobilePhone)
                    .HasColumnName("F_MobilePhone")
                    .HasColumnType("varchar(20)");

                entity.Property(e => e.FNickName)
                    .HasColumnName("F_NickName")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FOrganizeId)
                    .HasColumnName("F_OrganizeId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FRealName)
                    .HasColumnName("F_RealName")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FRoleId)
                    .HasColumnName("F_RoleId")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FSecurityLevel)
                    .HasColumnName("F_SecurityLevel")
                    .HasColumnType("int(11)");

                entity.Property(e => e.FSignature)
                    .HasColumnName("F_Signature")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FSortCode)
                    .HasColumnName("F_SortCode")
                    .HasColumnType("int(11)");

                entity.Property(e => e.FWeChat)
                    .HasColumnName("F_WeChat")
                    .HasColumnType("varchar(50)");
            });

            modelBuilder.Entity<SysUserLogOn>(entity =>
            {
                entity.HasKey(e => e.FId)
                    .HasName("PRIMARY");

                entity.ToTable("Sys_UserLogOn");

                entity.Property(e => e.FId)
                    .HasColumnName("F_Id")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FAllowEndTime)
                    .HasColumnName("F_AllowEndTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FAllowStartTime)
                    .HasColumnName("F_AllowStartTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FAnswerQuestion)
                    .HasColumnName("F_AnswerQuestion")
                    .HasColumnType("varchar(500)");

                entity.Property(e => e.FChangePasswordDate)
                    .HasColumnName("F_ChangePasswordDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.FCheckIpaddress)
                    .HasColumnName("F_CheckIPAddress")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FFirstVisitTime)
                    .HasColumnName("F_FirstVisitTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FLanguage)
                    .HasColumnName("F_Language")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FLastVisitTime)
                    .HasColumnName("F_LastVisitTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FLockEndDate)
                    .HasColumnName("F_LockEndDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.FLockStartDate)
                    .HasColumnName("F_LockStartDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.FLogOnCount)
                    .HasColumnName("F_LogOnCount")
                    .HasColumnType("int(11)");

                entity.Property(e => e.FMultiUserLogin)
                    .HasColumnName("F_MultiUserLogin")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FPreviousVisitTime)
                    .HasColumnName("F_PreviousVisitTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.FQuestion)
                    .HasColumnName("F_Question")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FTheme)
                    .HasColumnName("F_Theme")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FUserId)
                    .HasColumnName("F_UserId")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FUserOnLine)
                    .HasColumnName("F_UserOnLine")
                    .HasColumnType("tinyint(1)");

                entity.Property(e => e.FUserPassword)
                    .HasColumnName("F_UserPassword")
                    .HasColumnType("varchar(50)");

                entity.Property(e => e.FUserSecretkey)
                    .HasColumnName("F_UserSecretkey")
                    .HasColumnType("varchar(50)");
            });
        }
    }
}
